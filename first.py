# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'first.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

import openslide
from PIL.ImageQt import ImageQt
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from myWin import myWindow


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = myWindow()
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        self.menufile = QtWidgets.QMenu(self.menubar)
        self.menufile.setObjectName("menufile")
        self.menuview = QtWidgets.QMenu(self.menubar)
        self.menuview.setObjectName("menuview")
        self.menuhelp = QtWidgets.QMenu(self.menubar)
        self.menuhelp.setObjectName("menuhelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionopen = QtWidgets.QAction(MainWindow)
        self.actionopen.setObjectName("actionopen")
        self.menufile.addAction(self.actionopen)

        self.menubar.addAction(self.menufile.menuAction())
        self.menubar.addAction(self.menuview.menuAction())
        self.menubar.addAction(self.menuhelp.menuAction())
        self.actionopen.triggered.connect(self.openImage)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menufile.setTitle(_translate("MainWindow", "file"))
        self.menuview.setTitle(_translate("MainWindow", "view"))
        self.menuhelp.setTitle(_translate("MainWindow", "help"))
        self.actionopen.setText(_translate("MainWindow", "open"))

    def openImage(self):  # 选择本地图片上传
        global imgName  # 这里为了方便别的地方引用图片路径，我们把它设置为全局变量
        imgName, imgType = QFileDialog.getOpenFileName(self.centralwidget, "打开图片", "",
                                                       "*.svs;;*.png;;All Files(*)")  # 弹出一个文件选择框，第一个返回值imgName记录选中的文件路径+文件名，第二个返回值imgType记录文件的类型
        if imgName == "":
            print("no")
        source = openslide.open_slide(imgName)
        image = source.read_region((0, 0), 1, source.level_dimensions[1])
        qimage = ImageQt(image)
        qixmap = QtGui.QPixmap.fromImage(qimage)

        self.centralwidget.imgPixmap = qixmap  # 通过文件路径获取图片文件，并设置图片长宽为label控件的长宽
        self.centralwidget.scaledImg = self.centralwidget.imgPixmap.scaled(
            self.centralwidget.size())  # 在label控件上显示选择的图片
        self.actionopen.triggered.connect(lambda: self.openImage)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    formObj = QtWidgets.QMainWindow()
    myWin = Ui_MainWindow()
    myWin.setupUi(formObj)
    formObj.show()
    sys.exit(app.exec_())
